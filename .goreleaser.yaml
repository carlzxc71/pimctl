project_name: pimctl

before:
  hooks:
    - go mod tidy

builds:
  - id: macos #build:macos
    goos: [darwin]
    goarch: [amd64, arm64]
    env:
      - CGO_ENABLED=1
    binary: bin/pimctl
    main: ./
    ldflags:
      - -s -w -X github.com/co-native-ab/pimctl/internal/build.Version={{.Version}} -X github.com/co-native-ab/pimctl/internal/build.Date={{time "2006-01-02"}}

  - id: linux #build:linux
    goos: [linux]
    goarch: [arm, amd64, arm64]
    env:
      - CGO_ENABLED=0
    binary: bin/pimctl
    main: ./
    ldflags:
      - -s -w -X github.com/co-native-ab/pimctl/internal/build.Version={{.Version}} -X github.com/co-native-ab/pimctl/internal/build.Date={{time "2006-01-02"}}

  - id: windows #build:windows
    goos: [windows]
    goarch: [amd64, arm64]
    binary: bin/pimctl
    main: ./
    ldflags:
      - -s -w -X github.com/co-native-ab/pimctl/internal/build.Version={{.Version}} -X github.com/co-native-ab/pimctl/internal/build.Date={{time "2006-01-02"}}

archives:
  - id: linux-archive
    builds: [linux]
    name_template: "pimctl_{{ .Version }}_linux_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    wrap_in_directory: false
    strip_binary_directory: true
    format: tar.gz
    rlcp: true
    files:
      - LICENSE
  - id: macos-archive
    builds: [macos]
    name_template: "pimctl_{{ .Version }}_macOS_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    wrap_in_directory: false
    strip_binary_directory: true
    format: zip
    rlcp: true
    files:
      - LICENSE
  - id: windows-archive
    builds: [windows]
    name_template: "pimctl_{{ .Version }}_windows_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    wrap_in_directory: false
    strip_binary_directory: true
    format: zip
    rlcp: true
    files:
      - LICENSE
